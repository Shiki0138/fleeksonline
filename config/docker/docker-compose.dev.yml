version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: task-platform-db-dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: task_platform_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - task-platform-dev

  redis:
    image: redis:7-alpine
    container_name: task-platform-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - task-platform-dev

  backend:
    build:
      context: ../../src/backend
      dockerfile: Dockerfile.dev
    container_name: task-platform-backend-dev
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/task_platform_dev
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-jwt-secret-key-change-in-production
      - JWT_REFRESH_SECRET=dev-refresh-secret-key-change-in-production
      - PORT=3000
    ports:
      - "3000:3000"
    volumes:
      - ../../src/backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - task-platform-dev
    command: npm run dev

  frontend:
    build:
      context: ../../src/frontend
      dockerfile: Dockerfile.dev
    container_name: task-platform-frontend-dev
    environment:
      - VITE_API_URL=http://localhost:3000/api/v1
      - VITE_SOCKET_URL=http://localhost:3000
    ports:
      - "5173:5173"
    volumes:
      - ../../src/frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - task-platform-dev
    command: npm run dev

volumes:
  postgres_data_dev:
  redis_data_dev:

networks:
  task-platform-dev:
    driver: bridge