name: CI/CD Pipeline

on:
  push:
<<<<<<< HEAD
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
=======
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20.x'
>>>>>>> 459783e5ff4a66eaf5c8c10346e7f8e14da0285f

jobs:
  test:
    runs-on: ubuntu-latest
    
<<<<<<< HEAD
    strategy:
      matrix:
        node-version: [18.x, 20.x]
=======
    env:
      NEXT_PUBLIC_SUPABASE_URL: https://kbvaekypkszvzrwlbkug.supabase.co
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      BIOMETRIC_ENCRYPTION_KEY: ${{ secrets.BIOMETRIC_ENCRYPTION_KEY }}
      YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      WEBAUTHN_RP_NAME: Fleeks Beauty Platform
      WEBAUTHN_RP_ID: localhost
      WEBAUTHN_ORIGIN: http://localhost:3000
      NEXT_PUBLIC_APP_NAME: Fleeks Beauty Platform
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      MONTHLY_PRICE: 7980
      CURRENCY: JPY
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      REDIS_URL: redis://localhost:6379
>>>>>>> 459783e5ff4a66eaf5c8c10346e7f8e14da0285f
    
    steps:
    - uses: actions/checkout@v4
    
<<<<<<< HEAD
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
=======
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install --legacy-peer-deps
>>>>>>> 459783e5ff4a66eaf5c8c10346e7f8e14da0285f
    
    - name: Run linter
      run: npm run lint
    
<<<<<<< HEAD
    - name: Run unit tests
      run: npm run test:unit
    
    - name: Run integration tests
      run: npm run test:integration
    
    - name: Run coverage tests
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
    
    - name: Run build
      run: npm run build

  e2e-tests:
=======
    - name: Run type check
      run: npm run typecheck
    
    - name: Run tests
      run: npm test -- --passWithNoTests
    
    - name: Build application
      run: npm run build

  security:
>>>>>>> 459783e5ff4a66eaf5c8c10346e7f8e14da0285f
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
<<<<<<< HEAD
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Start application
      run: |
        npm start &
        sleep 10
    
    - name: Run E2E tests
      run: npm run test:e2e
    
    - name: Upload E2E test results
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: e2e-test-results
        path: tests/e2e/results/

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: npm audit --audit-level high
    
    - name: Run dependency check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'fleeks-system'
        path: '.'
        format: 'HTML'
    
    - name: Upload security results
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: reports/

  performance:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
=======
    - name: Run security audit
      run: npm audit --audit-level=high || true
    
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --debug --only-verified

  deploy-preview:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'pull_request'
>>>>>>> 459783e5ff4a66eaf5c8c10346e7f8e14da0285f
    
    steps:
    - uses: actions/checkout@v4
    
<<<<<<< HEAD
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run performance tests
      run: |
        npm start &
        sleep 10
        # TODO: Add performance testing tools (lighthouse, k6, etc.)
        echo "Performance tests placeholder"
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-report
        path: performance/
=======
    - name: Deploy to Vercel Preview
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: prj_aYJGlhNBZwbVppg5yD0DIjKUV2L3
        scope: ${{ secrets.VERCEL_ORG_ID }}
>>>>>>> 459783e5ff4a66eaf5c8c10346e7f8e14da0285f
